{"ast":null,"code":"var _jsxFileName = \"C:\\\\REACT-APP\\\\frontend\\\\src\\\\Context\\\\ShopContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShopContext = /*#__PURE__*/createContext(null);\nconst getDefaultCart = () => {\n  let cart = {};\n  for (let index = 0; index < 300 + 1; index++) {\n    cart[index] = 0;\n  }\n  return cart;\n};\nconst ShopContextProvider = props => {\n  _s();\n  const [all_product, setAll_Product] = useState([]);\n  const [cartItems, setCartItems] = useState(getDefaultCart());\n  useEffect(() => {\n    fetch('http://localhost:4000/products').then(response => response.json()).then(data => {\n      setAll_Product(data);\n    }).catch(error => console.error('Error fetching products:', error));\n    fetch('http://localhost:4000/getcart', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'auth-token': `${localStorage.getItem('auth-token')}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({})\n    }).then(response => response.json()).then(data => {\n      setCartItems(data);\n    }).catch(error => console.error('Error fetching cart:', error));\n  }, []);\n  const addToCart = async (productId, quantity) => {\n    try {\n      const response = await fetch('http://localhost:4000/add-to-cart', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'auth-token': `${localStorage.getItem('auth-token')}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          product_id: productId,\n          quantity\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Lỗi khi thêm vào giỏ hàng');\n      }\n      setCartItems(prevItems => {\n        const updatedItems = {\n          ...prevItems,\n          [productId]: (prevItems[productId] || 0) + quantity\n        };\n        return updatedItems;\n      });\n    } catch (error) {\n      console.error('Lỗi khi thêm vào giỏ hàng:', error);\n    }\n  };\n  const removeFromCart = async productId => {\n    try {\n      const response = await fetch('http://localhost:4000/remove-from-cart', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'auth-token': `${localStorage.getItem('auth-token')}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          product_id: productId\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Error removing from cart');\n      }\n      setCartItems(prevItems => {\n        const updatedItems = {\n          ...prevItems\n        };\n        delete updatedItems[productId];\n        return updatedItems;\n      });\n    } catch (error) {\n      console.error('Error removing from cart:', error);\n    }\n  };\n  const updateCartQuantity = async (productId, quantity) => {\n    try {\n      const response = await fetch('http://localhost:4000/update-cart-quantity', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'auth-token': `${localStorage.getItem('auth-token')}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          product_id: productId,\n          quantity\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Error updating cart quantity');\n      }\n      setCartItems(prevItems => {\n        const updatedItems = {\n          ...prevItems,\n          [productId]: quantity\n        };\n        return updatedItems;\n      });\n    } catch (error) {\n      console.error('Error updating cart quantity:', error);\n    }\n  };\n  const checkout = async (phoneNumber, address) => {\n    try {\n      const response = await fetch('http://localhost:4000/checkout', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'auth-token': `${localStorage.getItem('auth-token')}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          phoneNumber,\n          address\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Error during checkout');\n      }\n      setCartItems(getDefaultCart());\n      return response.json();\n    } catch (error) {\n      console.error('Error during checkout:', error);\n      throw error;\n    }\n  };\n  const getTotalCartAmount = () => {\n    return all_product.reduce((acc, product) => {\n      const quantity = cartItems[product.product_id] || 0;\n      return acc + product.price * quantity;\n    }, 0);\n  };\n  const getTotalCartItems = () => {\n    return Object.values(cartItems).reduce((acc, quantity) => acc + quantity, 0);\n  };\n  const contextValue = {\n    getTotalCartItems,\n    getTotalCartAmount,\n    all_product,\n    cartItems,\n    addToCart,\n    removeFromCart,\n    updateCartQuantity,\n    checkout\n  };\n  return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n_s(ShopContextProvider, \"2TWfLOVtZEcAkOpQXwNNYfVqbAU=\");\n_c = ShopContextProvider;\nexport default ShopContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ShopContextProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","jsxDEV","_jsxDEV","ShopContext","getDefaultCart","cart","index","ShopContextProvider","props","_s","all_product","setAll_Product","cartItems","setCartItems","fetch","then","response","json","data","catch","error","console","method","headers","localStorage","getItem","body","JSON","stringify","addToCart","productId","quantity","product_id","ok","Error","prevItems","updatedItems","removeFromCart","updateCartQuantity","checkout","phoneNumber","address","getTotalCartAmount","reduce","acc","product","price","getTotalCartItems","Object","values","contextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/REACT-APP/frontend/src/Context/ShopContext.jsx"],"sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\r\n\r\nexport const ShopContext = createContext(null);\r\n\r\nconst getDefaultCart = () => {\r\n  let cart = {};\r\n  for (let index = 0; index < 300 + 1; index++) {\r\n    cart[index] = 0;\r\n  }\r\n  return cart;\r\n};\r\n\r\nconst ShopContextProvider = (props) => {\r\n  const [all_product, setAll_Product] = useState([]);\r\n  const [cartItems, setCartItems] = useState(getDefaultCart());\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:4000/products')\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setAll_Product(data);\r\n      })\r\n      .catch((error) => console.error('Error fetching products:', error));\r\n\r\n    fetch('http://localhost:4000/getcart', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'auth-token': `${localStorage.getItem('auth-token')}`,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({}),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setCartItems(data);\r\n      })\r\n      .catch((error) => console.error('Error fetching cart:', error));\r\n  }, []);\r\n\r\n  const addToCart = async (productId, quantity) => {\r\n    try {\r\n      const response = await fetch('http://localhost:4000/add-to-cart', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'auth-token': `${localStorage.getItem('auth-token')}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ product_id: productId, quantity }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Lỗi khi thêm vào giỏ hàng');\r\n      }\r\n\r\n      setCartItems((prevItems) => {\r\n        const updatedItems = { ...prevItems, [productId]: (prevItems[productId] || 0) + quantity };\r\n        return updatedItems;\r\n      });\r\n\r\n    } catch (error) {\r\n      console.error('Lỗi khi thêm vào giỏ hàng:', error);\r\n    }\r\n  };\r\n\r\n  const removeFromCart = async (productId) => {\r\n    try {\r\n      const response = await fetch('http://localhost:4000/remove-from-cart', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'auth-token': `${localStorage.getItem('auth-token')}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ product_id: productId }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error removing from cart');\r\n      }\r\n\r\n      setCartItems((prevItems) => {\r\n        const updatedItems = { ...prevItems };\r\n        delete updatedItems[productId];\r\n        return updatedItems;\r\n      });\r\n\r\n    } catch (error) {\r\n      console.error('Error removing from cart:', error);\r\n    }\r\n  };\r\n\r\n  const updateCartQuantity = async (productId, quantity) => {\r\n    try {\r\n      const response = await fetch('http://localhost:4000/update-cart-quantity', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'auth-token': `${localStorage.getItem('auth-token')}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ product_id: productId, quantity }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error updating cart quantity');\r\n      }\r\n\r\n      setCartItems((prevItems) => {\r\n        const updatedItems = { ...prevItems, [productId]: quantity };\r\n        return updatedItems;\r\n      });\r\n    } catch (error) {\r\n      console.error('Error updating cart quantity:', error);\r\n    }\r\n  };\r\n\r\n  const checkout = async (phoneNumber, address) => {\r\n    try {\r\n      const response = await fetch('http://localhost:4000/checkout', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'auth-token': `${localStorage.getItem('auth-token')}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ phoneNumber, address })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error during checkout');\r\n      }\r\n\r\n      setCartItems(getDefaultCart());\r\n\r\n      return response.json();\r\n    } catch (error) {\r\n      console.error('Error during checkout:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const getTotalCartAmount = () => {\r\n    return all_product.reduce((acc, product) => {\r\n      const quantity = cartItems[product.product_id] || 0;\r\n      return acc + (product.price * quantity);\r\n    }, 0);\r\n  };\r\n\r\n  const getTotalCartItems = () => {\r\n    return Object.values(cartItems).reduce((acc, quantity) => acc + quantity, 0);\r\n  }\r\n\r\n  const contextValue = { getTotalCartItems, getTotalCartAmount, all_product, cartItems, addToCart, removeFromCart, updateCartQuantity, checkout };\r\n\r\n  return (\r\n    <ShopContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </ShopContext.Provider>\r\n  )\r\n}\r\n\r\nexport default ShopContextProvider;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}